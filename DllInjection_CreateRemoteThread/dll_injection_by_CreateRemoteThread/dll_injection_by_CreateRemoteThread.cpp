#include <stdio.h>
#include <Windows.h>
#include <TlHelp32.h>


int main()
{
    //LPCSTR DllPath = "C:\\Windows\\System32\\amsi.dll";
    LPCSTR DllPath = "C:\\Users\\hank_k_chen\\Desktop\\windows_malware_technique-master\\Dll_Template\\Debug\\Dll_Template.dll";
    // createprocess
    STARTUPINFOA si = { 0 };
    PROCESS_INFORMATION pi = { 0 };

    CreateProcessA("C:\\Windows\\System32\\notepad.exe", NULL, NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi);
    HANDLE hProcess = pi.hProcess;
    DWORD dwProcessId = pi.dwProcessId;

    WaitForSingleObject(pi.hProcess, 1000);


    LPVOID loadLibrary = (LPVOID)GetProcAddress(GetModuleHandleA("kernel32.dll"), "LoadLibraryA");
    if (!loadLibrary) {
        printf("[x] Cannot GetProcAddress LoadLibraryA\n");
        exit(1);
    }

    LPVOID dllAllocatedMemory = VirtualAllocEx(hProcess, NULL, 0x100, MEM_RESERVE | MEM_COMMIT, PAGE_EXECUTE_READWRITE);
    if (dllAllocatedMemory == NULL) {
        printf("[x] Cannot allocade memory for DLL-library\n");
        exit(1);
    }


    if (!WriteProcessMemory(hProcess, dllAllocatedMemory, DllPath, 0x100, NULL)) {
        printf("[x] Cannot write process memory\n");
        exit(1);
    }



    printf("[*] Starting remote thread at process \n");
    HANDLE hThread = CreateRemoteThread(hProcess, NULL, 0, (LPTHREAD_START_ROUTINE)loadLibrary, dllAllocatedMemory, 0, NULL);
    if (hThread == NULL) {
        printf("[-] Cannot create remote thread in process with \n");
        exit(1);
    }
    WaitForSingleObject(pi.hThread, 1000);

    //CloseHandle(hProcess);

    return 0;
}
